openapi: 3.0.0
info:
  title: Automotive Parts API
  version: 1.0.0
  description: A simple API for managing cars, parts, and suppliers.
servers:
  - url: 'http://automotiveparts.example.com/api'

paths:
  /cars:
    get:
      summary: Get a list of cars
      responses:
        '200':
          description: A list of cars
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Car'
    post:
      summary: Create a new car
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Car'
      responses:
        '201':
          description: Car created
    put:
      summary: Update a car
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Car'
      responses:
        '200':
          description: Car updated

  /cars/{id}:
    get:
      summary: Get a car by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
          description: The ID of the car to retrieve
      responses:
        '200':
          description: A single car
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Car'
        '404':
          description: Car not found
    delete:
      summary: Delete a car by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
          description: The ID of the car to delete
      responses:
        '204':
          description: Car deleted
        '404':
          description: Car not found

  /parts:
    get:
      summary: Get a list of parts
      responses:
        '200':
          description: A list of parts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Part'
    post:
      summary: Create a new part
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Part'
      responses:
        '201':
          description: Part created
    put:
      summary: Update a part
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Part'
      responses:
        '200':
          description: Part updated

  /parts/{id}:
    get:
      summary: Get a part by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
          description: The ID of the part to retrieve
      responses:
        '200':
          description: A single part
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Part'
        '404':
          description: Part not found
    delete:
      summary: Delete a part by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
          description: The ID of the part to delete
      responses:
        '204':
          description: Part deleted
        '404':
          description: Part not found

components:
  schemas:
    Car:
      type: object
      properties:
        id:
          type: integer
          format: int64
        make:
          type: string
        model:
          type: string
        year:
          type: integer
          format: int32
      required:
        - id
        - make
        - model
        - year

    Part:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        type:
          type: string
        carId:
          type: integer
          format: int64
          description: The ID of the car this part is associated with.
      required:
        - id
        - name
        - type