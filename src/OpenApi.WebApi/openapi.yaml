openapi: 3.0.0
info:
  title: CreativeLibrary API
  version: 1.0.0
  description: A simple API for managing books, authors, and publishers.
servers:
  - url: 'http://creativelibrary.example.com/api'
paths:
  /books:
    get:
      summary: Get a list of books
      responses:
        '200':
          description: A list of books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
    post:
      summary: Create a new book
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '201':
          description: Book created
    put:
      summary: Update a book
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '200':
          description: Book updated
    delete:
      summary: Delete a book
      responses:
        '204':
          description: Book deleted
  /books/{id}:
    get:
      summary: Get a book by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
          description: The ID of the book to retrieve
      responses:
        '200':
          description: A single book
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '404':
          description: Book not found
  /authors:
    get:
      summary: Get a list of authors
      responses:
        '200':
          description: A list of authors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Author'
    post:
      summary: Create a new author
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
      responses:
        '201':
          description: Author created
    put:
      summary: Update an author
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
      responses:
        '200':
          description: Author updated
    delete:
      summary: Delete an author
      responses:
        '204':
          description: Author deleted
  /publishers:
    get:
      summary: Get a list of publishers
      responses:
        '200':
          description: A list of publishers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Publisher'
    post:
      summary: Create a new publisher
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Publisher'
      responses:
        '201':
          description: Publisher created
    put:
      summary: Update a publisher
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Publisher'
      responses:
        '200':
          description: Publisher updated
    delete:
      summary: Delete a publisher
      responses:
        '204':
          description: Publisher deleted
components:
  schemas:
    Book:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        genre:
          type: string
          example: Fantasy
        author:
          $ref: '#/components/schemas/Author'
        publisher:
          $ref: '#/components/schemas/Publisher'
      required:
        - id
        - title
        - author
        - publisher
    Author:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        biography:
          type: string
        books:
          type: array
          items:
            $ref: '#/components/schemas/Book'
      required:
        - id
        - name
    Publisher:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        founded:
          type: integer
          format: int32
          description: The year the publisher was founded.
        location:
          type: string
          description: The main location of the publisher.
        booksPublished:
          type: array
          items:
            $ref: '#/components/schemas/Book'
      required:
        - id
        - name